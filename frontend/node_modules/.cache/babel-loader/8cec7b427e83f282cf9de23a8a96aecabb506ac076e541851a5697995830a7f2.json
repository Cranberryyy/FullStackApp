{"ast":null,"code":"var _jsxFileName = \"/Users/yanhu/Desktop/FullStack/FullStackApp/frontend/src/components/Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport APIService from '../components/APIService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form(props) {\n  _s();\n  const [title, setTitle] = useState(props.article.title);\n  const [body, setBody] = useState(props.article.body);\n  const [submitted, setSubmitted] = useState(false); // ✅ Track submission state\n\n  // Update form when switching articles\n  useEffect(() => {\n    setTitle(props.article.title);\n    setBody(props.article.body);\n    setSubmitted(false); // ✅ Reset submission state when switching articles\n  }, [props.article]);\n  const handleSubmit = () => {\n    setSubmitted(true); // ✅ Button changes text and gets disabled\n\n    if (props.formType === 'edit') {\n      APIService.UpdateArticle(props.article.id, {\n        title,\n        body\n      }).then(resp => {\n        props.updatedData(resp);\n      }).catch(error => console.log(error));\n    } else {\n      APIService.InsertArticle({\n        title,\n        body\n      }).then(resp => {\n        props.insertedArticle(resp);\n      }).catch(error => console.log(error));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.article ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        className: \"form-label\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: title,\n        placeholder: \"Enter title\",\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"body\",\n        className: \"form-label\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"5\",\n        value: body,\n        onChange: e => setBody(e.target.value),\n        className: \"form-control\",\n        placeholder: \"Enter Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"btn btn-success mt-3\",\n        disabled: submitted // Disable after clicking\n        ,\n        children: submitted ? props.formType === 'edit' ? 'OK' : 'Insert' : props.formType === 'edit' ? 'Update' : 'Insert'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(Form, \"cpPuleThlq9xLieLWArdP5aZCew=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","APIService","jsxDEV","_jsxDEV","Form","props","_s","title","setTitle","article","body","setBody","submitted","setSubmitted","handleSubmit","formType","UpdateArticle","id","then","resp","updatedData","catch","error","console","log","InsertArticle","insertedArticle","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","value","placeholder","onChange","e","target","rows","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/yanhu/Desktop/FullStack/FullStackApp/frontend/src/components/Form.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport APIService from '../components/APIService';\r\n\r\nfunction Form(props) {\r\n    const [title, setTitle] = useState(props.article.title);\r\n    const [body, setBody] = useState(props.article.body);\r\n    const [submitted, setSubmitted] = useState(false); // ✅ Track submission state\r\n\r\n    // Update form when switching articles\r\n    useEffect(() => {\r\n        setTitle(props.article.title);\r\n        setBody(props.article.body);\r\n        setSubmitted(false); // ✅ Reset submission state when switching articles\r\n    }, [props.article]);\r\n\r\n    const handleSubmit = () => {\r\n        setSubmitted(true); // ✅ Button changes text and gets disabled\r\n\r\n        if (props.formType === 'edit') {\r\n            APIService.UpdateArticle(props.article.id, { title, body })\r\n                .then(resp => {\r\n                    props.updatedData(resp);\r\n                })\r\n                .catch(error => console.log(error));\r\n        } else {\r\n            APIService.InsertArticle({ title, body })\r\n                .then(resp => {\r\n                    props.insertedArticle(resp);\r\n                })\r\n                .catch(error => console.log(error));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {props.article ? (\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"title\" className=\"form-label\">Title</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control\" \r\n                        value={title} \r\n                        placeholder=\"Enter title\" \r\n                        onChange={(e) => setTitle(e.target.value)} \r\n                    />\r\n                \r\n                    <label htmlFor=\"body\" className=\"form-label\">Description</label>\r\n                    <textarea \r\n                        rows=\"5\" \r\n                        value={body} \r\n                        onChange={(e) => setBody(e.target.value)} \r\n                        className=\"form-control\" \r\n                        placeholder=\"Enter Description\"\r\n                    />\r\n\r\n                    {/* ✅ Corrected Button Logic */}\r\n                    <button \r\n                        onClick={handleSubmit} \r\n                        className=\"btn btn-success mt-3\" \r\n                        disabled={submitted} // Disable after clicking\r\n                    >\r\n                        {submitted \r\n                            ? (props.formType === 'edit' ? 'OK' : 'Insert') \r\n                            : (props.formType === 'edit' ? 'Update' : 'Insert')}\r\n                    </button>\r\n                </div>\r\n            ) : null}  \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Form;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}