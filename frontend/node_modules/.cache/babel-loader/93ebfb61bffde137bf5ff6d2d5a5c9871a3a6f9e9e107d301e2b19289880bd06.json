{"ast":null,"code":"export default class APIService {\n  static UpdateArticle(id, body) {\n    return fetch(`http://127.0.0.1:5000/update/${id}/`, {\n      'method': 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    }).then(resp => resp.json());\n  }\n  static InsertArticle(body) {\n    return fetch(`http://127.0.0.1:5000/add`, {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    }).then(resp => resp.json());\n  }\n  static DeleteArticle(id) {\n    return fetch(`http://127.0.0.1:5000/delete/${id}/`, {\n      'method': 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n  static SearchArticle(query) {\n    return fetch(`http://127.0.0.1:5000/search?query=${query}`, {\n      'method': 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(resp => resp.json());\n  }\n  static SearchArticle(titleQuery, descriptionQuery) {\n    return fetch(`http://127.0.0.1:5000/search?title=${titleQuery}&description=${descriptionQuery}`, {\n      'method': 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(resp => resp.json());\n  }\n  static async ChatInteract(body) {\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json().catch(() => {\n        throw new Error(\"Invalid JSON format from server\");\n      });\n      console.log(\"Server Response:\", data);\n      return data;\n    } catch (error) {\n      console.error(\"Fetch error:\", error);\n      throw error;\n    }\n  }\n}","map":{"version":3,"names":["APIService","UpdateArticle","id","body","fetch","headers","JSON","stringify","then","resp","json","InsertArticle","DeleteArticle","SearchArticle","query","titleQuery","descriptionQuery","ChatInteract","response","method","ok","Error","status","data","catch","console","log","error"],"sources":["/Users/yanhu/Desktop/FullStack/FullStackApp/frontend/src/components/APIService.js"],"sourcesContent":["export default class APIService {\r\n    static UpdateArticle(id, body) {\r\n        return fetch(`http://127.0.0.1:5000/update/${id}/`, {\r\n            'method':'PUT',\r\n            headers: {\r\n              'Content-Type':'application/json'\r\n            },\r\n            body: JSON.stringify(body)\r\n          })\r\n          .then(resp => resp.json())\r\n    }\r\n\r\n    static InsertArticle(body) {\r\n        return fetch(`http://127.0.0.1:5000/add`, {\r\n            'method':'POST',\r\n            headers: {\r\n              'Content-Type':'application/json'\r\n            },\r\n            body: JSON.stringify(body)\r\n          })\r\n          .then(resp => resp.json())\r\n    }\r\n\r\n    static DeleteArticle(id) {\r\n        return fetch(`http://127.0.0.1:5000/delete/${id}/`, {\r\n            'method':'DELETE',\r\n            headers: {\r\n              'Content-Type':'application/json'\r\n            }\r\n        })\r\n    }\r\n\r\n    static SearchArticle(query) {\r\n        return fetch(`http://127.0.0.1:5000/search?query=${query}`, {\r\n            'method': 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(resp => resp.json())\r\n    }\r\n\r\n    static SearchArticle(titleQuery, descriptionQuery) {\r\n        return fetch(`http://127.0.0.1:5000/search?title=${titleQuery}&description=${descriptionQuery}`, {\r\n            'method': 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(resp => resp.json())\r\n    }\r\n\r\n    static async ChatInteract(body) {\r\n        try {\r\n          const response = await fetch(\"http://127.0.0.1:5000/chat\", {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(body),\r\n          });\r\n      \r\n          if (!response.ok) {\r\n            throw new Error(`HTTP error! Status: ${response.status}`);\r\n          }\r\n      \r\n          const data = await response.json().catch(() => {\r\n            throw new Error(\"Invalid JSON format from server\");\r\n          });\r\n      \r\n          console.log(\"Server Response:\", data);\r\n          return data;\r\n        } catch (error) {\r\n          console.error(\"Fetch error:\", error);\r\n          throw error;\r\n        }\r\n      }\r\n      \r\n}\r\n      \r\n"],"mappings":"AAAA,eAAe,MAAMA,UAAU,CAAC;EAC5B,OAAOC,aAAaA,CAACC,EAAE,EAAEC,IAAI,EAAE;IAC3B,OAAOC,KAAK,CAAC,gCAAgCF,EAAE,GAAG,EAAE;MAChD,QAAQ,EAAC,KAAK;MACdG,OAAO,EAAE;QACP,cAAc,EAAC;MACjB,CAAC;MACDF,IAAI,EAAEG,IAAI,CAACC,SAAS,CAACJ,IAAI;IAC3B,CAAC,CAAC,CACDK,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;EAChC;EAEA,OAAOC,aAAaA,CAACR,IAAI,EAAE;IACvB,OAAOC,KAAK,CAAC,2BAA2B,EAAE;MACtC,QAAQ,EAAC,MAAM;MACfC,OAAO,EAAE;QACP,cAAc,EAAC;MACjB,CAAC;MACDF,IAAI,EAAEG,IAAI,CAACC,SAAS,CAACJ,IAAI;IAC3B,CAAC,CAAC,CACDK,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;EAChC;EAEA,OAAOE,aAAaA,CAACV,EAAE,EAAE;IACrB,OAAOE,KAAK,CAAC,gCAAgCF,EAAE,GAAG,EAAE;MAChD,QAAQ,EAAC,QAAQ;MACjBG,OAAO,EAAE;QACP,cAAc,EAAC;MACjB;IACJ,CAAC,CAAC;EACN;EAEA,OAAOQ,aAAaA,CAACC,KAAK,EAAE;IACxB,OAAOV,KAAK,CAAC,sCAAsCU,KAAK,EAAE,EAAE;MACxD,QAAQ,EAAE,KAAK;MACfT,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC,CACDG,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;EAC9B;EAEA,OAAOG,aAAaA,CAACE,UAAU,EAAEC,gBAAgB,EAAE;IAC/C,OAAOZ,KAAK,CAAC,sCAAsCW,UAAU,gBAAgBC,gBAAgB,EAAE,EAAE;MAC7F,QAAQ,EAAE,KAAK;MACfX,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC,CACDG,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;EAC9B;EAEA,aAAaO,YAAYA,CAACd,IAAI,EAAE;IAC5B,IAAI;MACF,MAAMe,QAAQ,GAAG,MAAMd,KAAK,CAAC,4BAA4B,EAAE;QACzDe,MAAM,EAAE,MAAM;QACdd,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDF,IAAI,EAAEG,IAAI,CAACC,SAAS,CAACJ,IAAI;MAC3B,CAAC,CAAC;MAEF,IAAI,CAACe,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;MAC3D;MAEA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACR,IAAI,CAAC,CAAC,CAACc,KAAK,CAAC,MAAM;QAC7C,MAAM,IAAIH,KAAK,CAAC,iCAAiC,CAAC;MACpD,CAAC,CAAC;MAEFI,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,IAAI,CAAC;MACrC,OAAOA,IAAI;IACb,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC,MAAMA,KAAK;IACb;EACF;AAEN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}